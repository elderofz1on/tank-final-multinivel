// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "L1":
            case "level1":return tiles.createTilemap(hex`0a0008000000000000000000000000000000000100000000010100000101000000000101000000000000000001010000000000010101000000000001000100000001010001000000000000000000000000000000`, img`
. . . . . . . . . . 
. . . . . 2 . . . . 
2 2 . . 2 2 . . . . 
2 2 . . . . . . . . 
2 2 . . . . . 2 2 2 
. . . . . 2 . 2 . . 
. 2 2 . 2 . . . . . 
. . . . . . . . . . 
`, [myTiles.transparency16,sprites.builtin.brick], TileScale.Sixteen);
            case "L2":
            case "level3":return tiles.createTilemap(hex`0a0008000000000000000000000000000001000000000000000000010000000001010101010100000001010000000001000000000000000000010000010000000000000000000100000000000000000000000000`, img`
. . . . . . . . . . 
. . . 2 . . . . . . 
. . . 2 . . . . 2 2 
2 2 2 2 . . . 2 2 . 
. . . 2 . . . . . . 
. . . 2 . . 2 . . . 
. . . . . . 2 . . . 
. . . . . . . . . . 
`, [myTiles.transparency16,sprites.builtin.brick], TileScale.Sixteen);
            case "L3":
            case "level4":return tiles.createTilemap(hex`0a0008000000000000000000000000000000000000000000000000000101010000000000000001010100000001000000010101000000010100000000000000000101010000000000000001010101000000000000`, img`
. . . . . . . . . . 
. . . . . . . . . . 
. . . . 2 2 2 . . . 
. . . . 2 2 2 . . . 
2 . . . 2 2 2 . . . 
2 2 . . . . . . . . 
2 2 2 . . . . . . . 
2 2 2 2 . . . . . . 
`, [myTiles.transparency16,sprites.builtin.brick], TileScale.Sixteen);
            case "L4":
            case "level5":return tiles.createTilemap(hex`0a0008000000000000000000000000000000000000000100000000000101010000000000010101000000000000000101000000000000010101010000000001010000000000000001010100000000000000010101`, img`
. . . . . . . . . . 
. . . . . . . . 2 . 
. . . . 2 2 2 . . . 
. . 2 2 2 . . . . . 
. . 2 2 . . . . . . 
2 2 2 2 . . . . 2 2 
. . . . . . . 2 2 2 
. . . . . . . 2 2 2 
`, [myTiles.transparency16,sprites.builtin.brick], TileScale.Sixteen);
            case "L5":
            case "level2":return tiles.createTilemap(hex`0a0008000000000000000000000000000001010000000000000000000000000101000000010000000001000100000100000000000001000001000000000000000000000000010100000000000000010101000000`, img`
. . . . . . . . . . 
. . . 2 2 . . . . . 
. . . . . . . 2 2 . 
. . 2 . . . . 2 . 2 
. . 2 . . . . . . 2 
. . 2 . . . . . . . 
. . . . . 2 2 . . . 
. . . . 2 2 2 . . . 
`, [myTiles.transparency16,sprites.builtin.brick], TileScale.Sixteen);
            case "L6":
            case "level6":return tiles.createTilemap(hex`0a0008000101000000000000000001010000000100000000000000000001010000000000000000010101000001010100000100000000010101000000000000000101010000000000010101010100000000000101`, img`
2 2 . . . . . . . . 
2 2 . . . 2 . . . . 
. . . . . 2 2 . . . 
. . . . . 2 2 2 . . 
2 2 2 . . 2 . . . . 
2 2 2 . . . . . . . 
2 2 2 . . . . . 2 2 
2 2 2 . . . . . 2 2 
`, [myTiles.transparency16,sprites.builtin.brick], TileScale.Sixteen);
            case "L7":
            case "level7":return tiles.createTilemap(hex`0a0008000000000000000000000000000000000000030000010302020000020000000101020200000200030101010202000002000101000002020000020000000002020200000000020200000000000000000202`, img`
. . . . . . . . . . 
. . . . . . . . . . 
. . 2 2 . . 2 . . . 
. . 2 2 . . 2 . . . 
. . 2 2 . . 2 . . . 
. . 2 2 . . 2 . . . 
. 2 2 2 . . . . 2 2 
. . . . . . . . 2 2 
`, [myTiles.transparency16,sprites.castle.saplingPine,sprites.builtin.brick,sprites.castle.saplingOak], TileScale.Sixteen);
            case "L8":
            case "level9":return tiles.createTilemap(hex`0a0008000000000202000000000000000002020000000000010100000001010002020202010001020200020200020201020200000202000002020200000001010000000000000001010100000000000001010101`, img`
. . . . . . . . . . 
. . . . . . . . . . 
2 2 . . . 2 2 . . . 
. . 2 . 2 . . . . . 
. . . 2 . . . . . . 
. . . . . . . . 2 2 
. . . . . . . 2 2 2 
. . . . . . 2 2 2 2 
`, [myTiles.transparency16,sprites.builtin.brick,sprites.castle.saplingOak], TileScale.Sixteen);
            case "L9":
            case "level10":return tiles.createTilemap(hex`0a0008000101000000000001010101010000000000000101010101010000000000010202020200000000000002020200000000010000020000000000010101020101010000000001020201010100000000020202`, img`
2 2 . . . . . 2 2 2 
2 2 . . . . . . 2 2 
2 2 2 2 . . . . . 2 
. . . . . . . . . . 
. . . . . . . 2 . . 
. . . . . . 2 2 2 . 
2 2 2 . . . . 2 . . 
2 2 2 . . . . . . . 
`, [myTiles.transparency16,sprites.builtin.brick,sprites.castle.saplingOak], TileScale.Sixteen);
            case "L10":
            case "level11":return tiles.createTilemap(hex`0a0008000000000100000000000000000001010100000000000000000001000000000101000000000001010100000000000000010101000000000101000000000000000000010000000000000000010000000000`, img`
. . . 2 . . . . . . 
. . . 2 2 2 . . . . 
. . . . . 2 . . . . 
2 2 . . . . . 2 2 2 
. . . . . . . 2 2 2 
. . . . 2 2 . . . . 
. . . . . 2 . . . . 
. . . . 2 . . . . . 
`, [myTiles.transparency16,sprites.builtin.brick], TileScale.Sixteen);
            case "level8":
            case "level8":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [], -Infinity);
            case "level12":
            case "level12":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
